    public boolean isEmpty(){
        boolean retorno;
        
        retorno = this.quantidade == 0 && this.primeiro == null && this.ultimo == null;
        return retorno;
    }
    
    public LSE listaAoContrario(){
        Node auxilixar;
        Node auxiliarThis;
        LSE aoContrario = this;
        int auxiliarInteiro = 0;
        if(!this.isEmpty()){
            if (this.quantidade >= 1) {
                
                auxilixar = this.primeiro.getProx();
                while (auxilixar.hasProx()) {      
                    auxiliarThis = auxilixar.getProx();
                    auxiliarInteiro++;
                    auxilixar = aoContrario.primeiro;
                    for (int i = 0; i < (auxiliarInteiro - quantidade - 1); i++) {
                        auxilixar = auxilixar.getProx();
                    }
                    auxilixar.setProx(auxiliarThis);
                }
                Node ultimoController = ultimo;
                aoContrario.primeiro = ultimoController;
                aoContrario.ultimo = aoContrario.primeiro;
                System.out.println("Lista invertida com sucesso !!");
            }else{
                System.out.println("Não é possivel inverter uma lista vazia com apenas 1 elemento");
            }
        }else{
            System.out.println("Não é possivel inverter uma lista vazia");
        }
        return aoContrario;
    }